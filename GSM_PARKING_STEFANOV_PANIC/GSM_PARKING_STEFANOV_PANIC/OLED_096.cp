#line 1 "C:/Users/Korisnik/Downloads/milica/GSM_MODEM/OLED_096.c"
#line 1 "c:/users/korisnik/downloads/milica/gsm_modem/oled_096.h"
#line 1 "c:/users/public/documents/mikroelektronika/mikroc pro for arm/include/stdint.h"





typedef signed char int8_t;
typedef signed int int16_t;
typedef signed long int int32_t;
typedef signed long long int64_t;


typedef unsigned char uint8_t;
typedef unsigned int uint16_t;
typedef unsigned long int uint32_t;
typedef unsigned long long uint64_t;


typedef signed char int_least8_t;
typedef signed int int_least16_t;
typedef signed long int int_least32_t;
typedef signed long long int_least64_t;


typedef unsigned char uint_least8_t;
typedef unsigned int uint_least16_t;
typedef unsigned long int uint_least32_t;
typedef unsigned long long uint_least64_t;



typedef signed long int int_fast8_t;
typedef signed long int int_fast16_t;
typedef signed long int int_fast32_t;
typedef signed long long int_fast64_t;


typedef unsigned long int uint_fast8_t;
typedef unsigned long int uint_fast16_t;
typedef unsigned long int uint_fast32_t;
typedef unsigned long long uint_fast64_t;


typedef signed long int intptr_t;
typedef unsigned long int uintptr_t;


typedef signed long long intmax_t;
typedef unsigned long long uintmax_t;
#line 315 "c:/users/korisnik/downloads/milica/gsm_modem/oled_096.h"
static unsigned int buffer[128 * 64 / 8] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x80,
0x80,0x80,0x80,0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,
0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,

0x00,0x00,0x02,0x03,0xFF,0xFF,0xFF,0x01,0xFE,0x02,0x02,0x02,0x02,0x82,0x85,0xC3,
0xFF,0x7E,0x3D,0xC2,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xA0,0xC0,0xF0,0xBC,
0x77,0x0F,0x3F,0xFF,0xFE,0xED,0xF0,0x80,0xC0,0x40,0x80,0x00,0x00,0x00,0x00,0x0B,
0x07,0x19,0x04,0x02,0x02,0x02,0xFF,0xFF,0xFF,0xFC,0x02,0x02,0x02,0x03,0x0F,0x13,
0x0C,0x03,0x01,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x01,0x01,0x00,0x00,0x00,0x00,0xFF,
0x07,0xFF,0x3F,0xFE,0xFB,0xED,0xB0,0xC0,0x00,0x00,0x01,0xFF,0xFD,0x02,0x01,0x00,
0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x01,0x01,0x00,0x00,0xC0,0xF0,0xFC,0xFE,0x1F,
0xE3,0x1D,0x06,0x02,0x02,0x02,0x05,0x03,0x1F,0x17,0x0D,0x02,0x01,0x00,0x00,0x00,

0x00,0x02,0x05,0x05,0xFF,0xFF,0xFF,0x01,0xFD,0x05,0x05,0x05,0x05,0x07,0x0B,0x16,
0xFE,0xFF,0xFD,0xFC,0xF0,0x00,0x00,0x00,0x00,0x00,0x81,0xE1,0x3F,0xE7,0x1E,0x1D,
0xB6,0x78,0xB8,0x5D,0x2F,0x7F,0xFF,0xFD,0xED,0x75,0x85,0x06,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
0x00,0xFF,0x00,0x00,0x03,0x0F,0x3F,0xFE,0xFB,0xEC,0x90,0xFF,0xFF,0x00,0x00,0x00,
0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x3F,0xFF,0xFF,0xFF,0x80,
0x3F,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xF0,0xE0,0x00,0x00,0x00,0x00,

0x00,0x00,0x18,0x18,0x1F,0x1F,0x1F,0x18,0x1F,0x18,0x18,0x18,0x18,0x18,0x1C,0x1E,
0x1F,0x0F,0x0F,0x07,0x01,0x00,0x10,0x18,0x1C,0x1E,0x1F,0x1F,0x1C,0x1F,0x18,0x10,
0x00,0x01,0x00,0x00,0x10,0x08,0x1D,0x1F,0x1F,0x1F,0x1D,0x1A,0x14,0x18,0x10,0x00,
0x00,0x00,0x00,0x00,0x08,0x1C,0x1F,0x1F,0x1F,0x19,0x16,0x18,0x10,0x00,0x00,0x00,
0x00,0x00,0x10,0x18,0x1C,0x1F,0x1F,0x1F,0x1B,0x14,0x18,0x10,0x10,0x18,0x1C,0x1F,
0x1E,0x1B,0x1C,0x18,0x10,0x00,0x00,0x00,0x03,0x1F,0x1F,0x1F,0x1F,0x00,0x00,0x00,
0x10,0x18,0x1C,0x1F,0x1F,0x1F,0x1B,0x14,0x18,0x10,0x00,0x00,0x01,0x03,0x07,0x0F,
0x0E,0x19,0x1A,0x14,0x10,0x10,0x10,0x18,0x0C,0x07,0x03,0x00,0x00,0x00,0x00,0x00,

0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
#line 466 "c:/users/korisnik/downloads/milica/gsm_modem/oled_096.h"
};

static unsigned int student [128 * 64 / 8] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0,
0xD8, 0x88, 0x8C, 0x84, 0x84, 0x86, 0x82, 0x02, 0x33, 0x39, 0xB9, 0x99, 0x99, 0x8F, 0x87, 0x80,
0xC0, 0xE0, 0xB0, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x80, 0xC0, 0xE0, 0x38, 0x1C, 0x0E, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xC0,
0xE0, 0xB0, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xBC, 0xAC,
0xE6, 0x46, 0x42, 0x42, 0x43, 0x49, 0x4D, 0x0D, 0x09, 0x05, 0x07, 0x02, 0x40, 0x60, 0xE0, 0xE0,
0x70, 0x38, 0x18, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xF0, 0x90, 0x98, 0x88, 0x88, 0x88, 0x80,
0xC0, 0x40, 0x40, 0x60, 0x21, 0xB1, 0x99, 0xCD, 0x67, 0x20, 0x30, 0xF8, 0xBC, 0x8E, 0xC7, 0x43,
0x61, 0x30, 0xF0, 0xF8, 0xFC, 0xEC, 0xF4, 0xB8, 0x9C, 0xC4, 0x40, 0x60, 0xF0, 0xF0, 0xF8, 0xDC,
0xEC, 0xBC, 0x9C, 0xC7, 0x43, 0x61, 0xF0, 0xF0, 0xB8, 0x98, 0x9C, 0xCC, 0x4C, 0x60, 0xE0, 0xF0,
0x78, 0x38, 0xDC, 0xFC, 0xBC, 0x9C, 0xCC, 0x64, 0x20, 0x30, 0xF8, 0xBC, 0x0E, 0x07, 0x03, 0x01,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xCE, 0x86, 0x83, 0x83, 0x81, 0x81, 0xC0, 0x40,
0x60, 0x60, 0x30, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0x70, 0x38, 0x1C, 0x0E, 0x03, 0x01, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
#line 797 "c:/users/korisnik/downloads/milica/gsm_modem/oled_096.h"
void Init_OLED();
 void display(unsigned int *matrix);
void OLED_command(uint8_t c);
 void OLED_data(uint8_t c);





 void oledCommand( uint8_t ch );
 void oledDisplayOffset( uint8_t offset );
 void oledData( uint8_t dats );
 void oledGotoYX(unsigned char Row, unsigned char Column);
 void oledPutChar( char ch );
 void oledPrint( char *s );
 void oledClear();
 void oledInit();

 void OLED_rscroll(char start, char stop);
 void OLED_pixel(short x, short y, char color);
 void OLED_stopscroll();
 void OLED_lscroll(char start, char stop);

 void drawCircle(int16_t x0, int16_t y0, int16_t radius, int16_t color);

 void oledPutCharDigitalFont( char ch );

 void Digitalno_nula(uint8_t pozicija);
 void Digitalno_Jedan(uint8_t pozicija);
 void Digitalno_Dva(uint8_t pozicija);
 void Digitalno_Tri(uint8_t pozicija);
 void Digitalno_Cetiri(uint8_t pozicija);
 void Digitalno_Pet(uint8_t pozicija);
 void Digitalno_Sest(uint8_t pozicija);
 void Digitalno_Sedam(uint8_t pozicija);
 void Digitalno_Osam(uint8_t pozicija);
 void Digitalno_Devet(uint8_t pozicija);
#line 1 "c:/users/public/documents/mikroelektronika/mikroc pro for arm/include/stdbool.h"



 typedef char _Bool;
#line 5 "C:/Users/Korisnik/Downloads/milica/GSM_MODEM/OLED_096.c"
const uint8_t OledFont[][8] =
{
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x5f,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x07,0x00,0x07,0x00,0x00,0x00},
 {0x00,0x14,0x7F,0x14,0x7F,0x14,0x00,0x00},
 {0x00,0x24,0x2A,0x7F,0x2A,0x12,0x00,0x00},
 {0x00,0x23,0x13,0x08,0x64,0x62,0x00,0x00},
 {0x00,0x36,0x49,0x55,0x22,0x50,0x00,0x00},
 {0x00,0x00,0x05,0x03,0x00,0x00,0x00,0x00},
 {0x00,0x1C,0x22,0x41,0x00,0x00,0x00,0x00},
 {0x00,0x41,0x22,0x1C,0x00,0x00,0x00,0x00},
 {0x00,0x08,0x2A,0x1C,0x2A,0x08,0x00,0x00},
 {0x00,0x08,0x08,0x3E,0x08,0x08,0x00,0x00},
 {0x00,0xA0,0x60,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x08,0x08,0x08,0x08,0x08,0x00,0x00},
 {0x00,0x60,0x60,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x20,0x10,0x08,0x04,0x02,0x00,0x00},
 {0x00,0x3E,0x51,0x49,0x45,0x3E,0x00,0x00},
 {0x00,0x00,0x42,0x7F,0x40,0x00,0x00,0x00},
 {0x00,0x62,0x51,0x49,0x49,0x46,0x00,0x00},
 {0x00,0x22,0x41,0x49,0x49,0x36,0x00,0x00},
 {0x00,0x18,0x14,0x12,0x7F,0x10,0x00,0x00},
 {0x00,0x27,0x45,0x45,0x45,0x39,0x00,0x00},
 {0x00,0x3C,0x4A,0x49,0x49,0x30,0x00,0x00},
 {0x00,0x01,0x71,0x09,0x05,0x03,0x00,0x00},
 {0x00,0x36,0x49,0x49,0x49,0x36,0x00,0x00},
 {0x00,0x06,0x49,0x49,0x29,0x1E,0x00,0x00},
 {0x00,0x00,0x36,0x36,0x00,0x00,0x00,0x00},
 {0x00,0x00,0xAC,0x6C,0x00,0x00,0x00,0x00},
 {0x00,0x08,0x14,0x22,0x41,0x00,0x00,0x00},
 {0x00,0x14,0x14,0x14,0x14,0x14,0x00,0x00},
 {0x00,0x41,0x22,0x14,0x08,0x00,0x00,0x00},
 {0x00,0x02,0x01,0x51,0x09,0x06,0x00,0x00},
 {0x00,0x32,0x49,0x79,0x41,0x3E,0x00,0x00},
 {0x00,0x7E,0x09,0x09,0x09,0x7E,0x00,0x00},
 {0x00,0x7F,0x49,0x49,0x49,0x36,0x00,0x00},
 {0x00,0x3E,0x41,0x41,0x41,0x22,0x00,0x00},
 {0x00,0x7F,0x41,0x41,0x22,0x1C,0x00,0x00},
 {0x00,0x7F,0x49,0x49,0x49,0x41,0x00,0x00},
 {0x00,0x7F,0x09,0x09,0x09,0x01,0x00,0x00},
 {0x00,0x3E,0x41,0x41,0x51,0x72,0x00,0x00},
 {0x00,0x7F,0x08,0x08,0x08,0x7F,0x00,0x00},
 {0x00,0x41,0x7F,0x41,0x00,0x00,0x00,0x00},
 {0x00,0x20,0x40,0x41,0x3F,0x01,0x00,0x00},
 {0x00,0x7F,0x08,0x14,0x22,0x41,0x00,0x00},
 {0x00,0x7F,0x40,0x40,0x40,0x40,0x00,0x00},
 {0x00,0x7F,0x02,0x0C,0x02,0x7F,0x00,0x00},
 {0x00,0x7F,0x04,0x08,0x10,0x7F,0x00,0x00},
 {0x00,0x3E,0x41,0x41,0x41,0x3E,0x00,0x00},
 {0x00,0x7F,0x09,0x09,0x09,0x06,0x00,0x00},
 {0x00,0x3E,0x41,0x51,0x21,0x5E,0x00,0x00},
 {0x00,0x7F,0x09,0x19,0x29,0x46,0x00,0x00},
 {0x00,0x26,0x49,0x49,0x49,0x32,0x00,0x00},
 {0x00,0x01,0x01,0x7F,0x01,0x01,0x00,0x00},
 {0x00,0x3F,0x40,0x40,0x40,0x3F,0x00,0x00},
 {0x00,0x1F,0x20,0x40,0x20,0x1F,0x00,0x00},
 {0x00,0x3F,0x40,0x38,0x40,0x3F,0x00,0x00},
 {0x00,0x63,0x14,0x08,0x14,0x63,0x00,0x00},
 {0x00,0x03,0x04,0x78,0x04,0x03,0x00,0x00},
 {0x00,0x61,0x51,0x49,0x45,0x43,0x00,0x00},
 {0x00,0x7F,0x41,0x41,0x00,0x00,0x00,0x00},
 {0x00,0x02,0x04,0x08,0x10,0x20,0x00,0x00},
 {0x00,0x41,0x41,0x7F,0x00,0x00,0x00,0x00},
 {0x00,0x04,0x02,0x01,0x02,0x04,0x00,0x00},
 {0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00},
 {0x00,0x01,0x02,0x04,0x00,0x00,0x00,0x00},
 {0x00,0x20,0x54,0x54,0x54,0x78,0x00,0x00},
 {0x00,0x7F,0x48,0x44,0x44,0x38,0x00,0x00},
 {0x00,0x38,0x44,0x44,0x28,0x00,0x00,0x00},
 {0x00,0x38,0x44,0x44,0x48,0x7F,0x00,0x00},
 {0x00,0x38,0x54,0x54,0x54,0x18,0x00,0x00},
 {0x00,0x08,0x7E,0x09,0x02,0x00,0x00,0x00},
 {0x00,0x18,0xA4,0xA4,0xA4,0x7C,0x00,0x00},
 {0x00,0x7F,0x08,0x04,0x04,0x78,0x00,0x00},
 {0x00,0x00,0x7D,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x80,0x84,0x7D,0x00,0x00,0x00,0x00},
 {0x00,0x7F,0x10,0x28,0x44,0x00,0x00,0x00},
 {0x00,0x41,0x7F,0x40,0x00,0x00,0x00,0x00},
 {0x00,0x7C,0x04,0x18,0x04,0x78,0x00,0x00},
 {0x00,0x7C,0x08,0x04,0x7C,0x00,0x00,0x00},
 {0x00,0x38,0x44,0x44,0x38,0x00,0x00,0x00},
 {0x00,0xFC,0x24,0x24,0x18,0x00,0x00,0x00},
 {0x00,0x18,0x24,0x24,0xFC,0x00,0x00,0x00},
 {0x00,0x00,0x7C,0x08,0x04,0x00,0x00,0x00},
 {0x00,0x48,0x54,0x54,0x24,0x00,0x00,0x00},
 {0x00,0x04,0x7F,0x44,0x00,0x00,0x00,0x00},
 {0x00,0x3C,0x40,0x40,0x7C,0x00,0x00,0x00},
 {0x00,0x1C,0x20,0x40,0x20,0x1C,0x00,0x00},
 {0x00,0x3C,0x40,0x30,0x40,0x3C,0x00,0x00},
 {0x00,0x44,0x28,0x10,0x28,0x44,0x00,0x00},
 {0x00,0x1C,0xA0,0xA0,0x7C,0x00,0x00,0x00},
 {0x00,0x44,0x64,0x54,0x4C,0x44,0x00,0x00},
 {0x00,0x08,0x36,0x41,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x7F,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x41,0x36,0x08,0x00,0x00,0x00,0x00},
 {0x00,0x02,0x01,0x01,0x02,0x01,0x00,0x00},
 {0x00,0x02,0x05,0x05,0x02,0x00,0x00,0x00}
};





const uint8_t digitalFont[][8] = {
 {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
 {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
 {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
 {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
 {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},

 {0xff, 0xfe, 0xfc, 0xf9, 0xf3, 0xe7, 0xcf, 0x9f},
 {0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
 {0x7f, 0x3f, 0x9f, 0xcf, 0xe7, 0xf3, 0xf9, 0xfc},
 {0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
 {0xe7, 0xe7, 0xe7, 0xe7, 0xe7, 0xe7, 0xe7, 0xe7},
 {0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
 {0xfe, 0xfc, 0xf9, 0xf3, 0xe7, 0xcf, 0x9f, 0x3f},
 {0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff},
 {0x7f, 0x3f, 0x9f, 0xcf, 0xe7, 0xf3, 0xf9, 0xfc},
 {0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e, 0x7e},


 {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x0f},
 {0x0f, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},

 {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xf0},
 {0xf0, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},

 {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},




 };



void oledInit()
{
 oledCommand(  0xAE  );
 delay_ms( 100 );
 oledCommand(  0xAF  );
 delay_ms( 100 );
 oledCommand(  0xA6  );
 oledCommand(  0x2E  );
}




void oledCommand( uint8_t ch )
{
 uint8_t bytes[2];
 bytes[0] =  0x80 ;
 bytes[1] = ch;
 I2C1_Start();
 I2C1_Write(  0x3c , bytes, 2, END_MODE_STOP );
}


void oledDisplayOffset( uint8_t offset )
{
 uint8_t bytes[3];
 bytes[0] =  0x80 ;
 bytes[1] = 0xD3;
 bytes[2] = offset;
 I2C1_Start();
 I2C1_Write(  0x3c , bytes, 3, END_MODE_STOP );
}


void oledData( uint8_t dats )
{
 uint8_t bytes[2];
 bytes[0] =  0x40 ;
 bytes[1] = dats;
 I2C1_Start();
 I2C1_Write(  0x3c , bytes, 2, END_MODE_STOP );
}


void oledGotoYX(unsigned char Row, unsigned char Column)
{
 oledCommand( 0xB0 + Row);
 oledCommand( 0x00 + (8*Column & 0x0F) );
 oledCommand( 0x10 + ((8*Column>>4)&0x0F) );
}


void oledPutChar( char ch )
{

 const uint8_t *base = &OledFont[ch - 32][0];
 uint8_t bytes[9];

 if ( ( ch < 32 ) || ( ch > 127 ) )
 ch = ' ';




 bytes[0] =  0x40 ;
 memmove( bytes + 1, base, 8 );
 I2C1_Start();
 I2C1_Write(  0x3c , bytes, 9, END_MODE_STOP );
}


void oledPrint( char *s )
{
 uint8_t i = 0, red = 0;
 while (*s){
 oledPutChar( *s++);
 i++;
 if(i>14){
 red++;
 oledGotoYX(red, 0);
 i = 0;
 }
 }
}


void oledClear()
{
 uint16_t row=0;
 uint16_t col = 0;
 for ( row = 0; row < 8; row++ ) {
 for ( col = 0; col < 16; col++ ) {
 oledGotoYX( row, col );
 oledPutChar( ' ' );
 }
 }
}


void OLED_rscroll(char start, char stop) {
 oledCommand(0x26);
 oledCommand(0X00);
 oledCommand(start);
 oledCommand(0X00);
 oledCommand(stop);
 oledCommand(0X00);
 oledCommand(0XFF);
 oledCommand(0x2F);
}

void OLED_lscroll(char start, char stop) {
 oledCommand(0x27);
 oledCommand(0X00);
 oledCommand(start);
 oledCommand(0X00);
 oledCommand(stop);
 oledCommand(0X00);
 oledCommand(0XFF);
 oledCommand(0x2F);
}
void OLED_stopscroll() {
 oledCommand(0x2E);
}
void OLED_pixel(short x, short y, char color){
 char y_bit = y%8;
 short y_row = (y - y_bit)*16 + x;
 buffer[y_row] |= (color?1:0) << y_bit;
}



void oledPutCharDigitalFont( char ch )
{ const uint8_t *base = &digitalFont[ch - 32][0];
uint8_t bytes[9];
 if ( ( ch < 32 ) || ( ch > 127 ) )
 ch = ' ';




 bytes[0] =  0x40 ;
 memmove( bytes + 1, base, 8 );
 I2C1_Start();
 I2C1_Write(  0x3c , bytes, 9, END_MODE_STOP );



}



void Init_OLED()
{

 oledCommand( 0xAE );
 oledCommand( 0xD5 );
 oledCommand(0x80);
 oledCommand( 0xA8 );
 oledCommand(64-1);
 oledCommand( 0xD3 );
 oledCommand(0x00);
 oledCommand( 0x40 | 0x00);
 oledCommand( 0x8D );
 oledCommand(0x14);
 oledCommand( 0x20 );
 oledCommand(0x00);
 oledCommand( 0xA0 | 0x01);
 oledCommand( 0xC8 );
 oledCommand( 0xDA );
 oledCommand(0x12);
 oledCommand( 0x81 );
 oledCommand(0xcf);
 oledCommand( 0xD9 );
 oledCommand(0xf1);
 oledCommand( 0xDB );
 oledCommand(0x40);
 oledCommand( 0xA4 );
 oledCommand( 0xA6 );
 oledCommand( 0xAF );
 oledCommand( 0x21 );
 oledCommand(0x00);
 oledCommand(0x7f);
 oledCommand( 0x22 );
 oledCommand(0x00);
 oledCommand(0x07);
#line 359 "C:/Users/Korisnik/Downloads/milica/GSM_MODEM/OLED_096.c"
}


 void display(unsigned int *matrix) {
 uint16_t i;
 oledCommand(0 | 0x0);
 oledCommand(0 | 0x0);
 oledCommand(0 | 0x1);
 for (i=0; i<(128*64/8); i++) {

 oledData(matrix[i]);

 }

}
#line 838 "C:/Users/Korisnik/Downloads/milica/GSM_MODEM/OLED_096.c"
void drawCircle(int16_t x0, int16_t y0, int16_t radius, int16_t color) {
 int16_t x = 0, y = radius;
 int16_t dp = 1 - radius;
 do {
 if (dp < 0)
 dp = dp + 2 * (++x) + 3;
 else
 dp = dp + 2 * (++x) - 2 * (--y) + 5;

 OLED_pixel(x0 + x, y0 + y, color);
 OLED_pixel(x0 - x, y0 + y, color);
 OLED_pixel(x0 + x, y0 - y, color);
 OLED_pixel(x0 - x, y0 - y, color);
 OLED_pixel(x0 + y, y0 + x, color);
 OLED_pixel(x0 - y, y0 + x, color);
 OLED_pixel(x0 + y, y0 - x, color);
 OLED_pixel(x0 - y, y0 - x, color);

 } while (x < y);

 OLED_pixel(x0 + radius, y0, color);
 OLED_pixel(x0, y0 + radius, color);
 OLED_pixel(x0 - radius, y0, color);
 OLED_pixel(x0, y0 - radius, color);
}








void Digitalno_nula(uint8_t pozicija){




 oledGotoYX(2,pozicija);
 oledPutCharDigitalFont(43);
 oledGotoYX(3,pozicija);
 oledPutCharDigitalFont(33);
 oledGotoYX(4,pozicija);
 oledPutCharDigitalFont(41);
 oledGotoYX(5,pozicija);
 oledPutCharDigitalFont(33);

 oledGotoYX(2,1+pozicija);
 oledPutCharDigitalFont(38);
 oledGotoYX(2,2+pozicija);
 oledPutCharDigitalFont(39);
 oledGotoYX(3,2+pozicija);
 oledPutCharDigitalFont(40);
 oledGotoYX(4,2+pozicija);
 oledPutCharDigitalFont(41);
 oledGotoYX(5,2+pozicija);
 oledPutCharDigitalFont(42);
 oledGotoYX(6,2+pozicija);
 oledPutCharDigitalFont(43);
 oledGotoYX(6,1+pozicija);
 oledPutCharDigitalFont(44);
 oledGotoYX(6,pozicija);
 oledPutCharDigitalFont(45);





}

void Digitalno_Jedan(uint8_t pozicija){

 oledGotoYX(2,2+pozicija);
 oledPutCharDigitalFont(39);
 oledGotoYX(3,2+pozicija);
 oledPutCharDigitalFont(40);
 oledGotoYX(4,2+pozicija);
 oledPutCharDigitalFont(41);
 oledGotoYX(5,2+pozicija);
 oledPutCharDigitalFont(42);
 oledGotoYX(6,2+pozicija);
 oledPutCharDigitalFont(43);
}

void Digitalno_Dva(uint8_t pozicija){

 oledGotoYX(2,pozicija);
 oledPutCharDigitalFont(43);
 oledGotoYX(2,1+pozicija);
 oledPutCharDigitalFont(38);
 oledGotoYX(2,2+pozicija);
 oledPutCharDigitalFont(39);
 oledGotoYX(3,2+pozicija);
 oledPutCharDigitalFont(40);
 oledGotoYX(4,2+pozicija);
 oledPutCharDigitalFont(41);
 oledGotoYX(4,pozicija);
 oledPutCharDigitalFont(41);
 oledGotoYX(5,pozicija);
 oledPutCharDigitalFont(33);
 oledGotoYX(6,2+pozicija);
 oledPutCharDigitalFont(43);
 oledGotoYX(6,1+pozicija);
 oledPutCharDigitalFont(44);
 oledGotoYX(6,pozicija);
 oledPutCharDigitalFont(45);
 oledGotoYX(4,1+pozicija);
 oledPutCharDigitalFont(46);
}


void Digitalno_Tri(uint8_t pozicija){

 oledGotoYX(2,pozicija);
 oledPutCharDigitalFont(43);
 oledGotoYX(2,1+pozicija);
 oledPutCharDigitalFont(38);
 oledGotoYX(2,2+pozicija);
 oledPutCharDigitalFont(39);
 oledGotoYX(3,2+pozicija);
 oledPutCharDigitalFont(40);
 oledGotoYX(4,2+pozicija);
 oledPutCharDigitalFont(41);
 oledGotoYX(4,pozicija);
 oledPutCharDigitalFont(41);
 oledGotoYX(5,2+pozicija);
 oledPutCharDigitalFont(42);
 oledGotoYX(6,2+pozicija);
 oledPutCharDigitalFont(43);
 oledGotoYX(6,1+pozicija);
 oledPutCharDigitalFont(44);
 oledGotoYX(6,pozicija);
 oledPutCharDigitalFont(45);
 oledGotoYX(4,1+pozicija);
 oledPutCharDigitalFont(46);
}

void Digitalno_Cetiri(uint8_t pozicija){

 oledGotoYX(2,pozicija);
 oledPutCharDigitalFont(43);


 oledGotoYX(2,2+pozicija);
 oledPutCharDigitalFont(39);
 oledGotoYX(3,2+pozicija);
 oledPutCharDigitalFont(40);
 oledGotoYX(4,2+pozicija);
 oledPutCharDigitalFont(41);
 oledGotoYX(4,pozicija);
 oledPutCharDigitalFont(41);
 oledGotoYX(5,2+pozicija);
 oledPutCharDigitalFont(42);
 oledGotoYX(6,2+pozicija);
 oledPutCharDigitalFont(43);

 oledGotoYX(3,pozicija);
 oledPutCharDigitalFont(33);

 oledGotoYX(4,1+pozicija);
 oledPutCharDigitalFont(46);

}

void Digitalno_Pet(uint8_t pozicija){


 oledGotoYX(2,pozicija);
 oledPutCharDigitalFont(43);
 oledGotoYX(3,pozicija);
 oledPutCharDigitalFont(33);
 oledGotoYX(4,pozicija);
 oledPutCharDigitalFont(41);

 oledGotoYX(2,1+pozicija);
 oledPutCharDigitalFont(38);
 oledGotoYX(2,2+pozicija);
 oledPutCharDigitalFont(39);

 oledGotoYX(4,2+pozicija);
 oledPutCharDigitalFont(41);
 oledGotoYX(5,2+pozicija);
 oledPutCharDigitalFont(42);
 oledGotoYX(6,2+pozicija);
 oledPutCharDigitalFont(43);
 oledGotoYX(6,1+pozicija);
 oledPutCharDigitalFont(44);
 oledGotoYX(6,pozicija);
 oledPutCharDigitalFont(45);

 oledGotoYX(4,1+pozicija);
 oledPutCharDigitalFont(46);

}

void Digitalno_Sest(uint8_t pozicija){

 oledGotoYX(2,pozicija);
 oledPutCharDigitalFont(43);
 oledGotoYX(3,pozicija);
 oledPutCharDigitalFont(33);
 oledGotoYX(4,pozicija);
 oledPutCharDigitalFont(41);

 oledGotoYX(2,1+pozicija);
 oledPutCharDigitalFont(38);
 oledGotoYX(2,2+pozicija);
 oledPutCharDigitalFont(39);

 oledGotoYX(4,2+pozicija);
 oledPutCharDigitalFont(41);
 oledGotoYX(5,2+pozicija);
 oledPutCharDigitalFont(42);
 oledGotoYX(6,2+pozicija);
 oledPutCharDigitalFont(43);
 oledGotoYX(6,1+pozicija);
 oledPutCharDigitalFont(44);
 oledGotoYX(6,pozicija);
 oledPutCharDigitalFont(45);
 oledGotoYX(5,pozicija);
 oledPutCharDigitalFont(33);

 oledGotoYX(4,1+pozicija);
 oledPutCharDigitalFont(46);

}

void Digitalno_Sedam(uint8_t pozicija){
 oledGotoYX(2,pozicija);
 oledPutCharDigitalFont(43);
 oledGotoYX(2,1+pozicija);
 oledPutCharDigitalFont(38);
 oledGotoYX(2,2+pozicija);
 oledPutCharDigitalFont(39);
 oledGotoYX(3,2+pozicija);
 oledPutCharDigitalFont(40);
 oledGotoYX(4,2+pozicija);
 oledPutCharDigitalFont(41);
 oledGotoYX(5,2+pozicija);
 oledPutCharDigitalFont(42);
 oledGotoYX(6,2+pozicija);
 oledPutCharDigitalFont(43);
}

void Digitalno_Osam(uint8_t pozicija){
 oledGotoYX(2,pozicija);
 oledPutCharDigitalFont(43);
 oledGotoYX(3,pozicija);
 oledPutCharDigitalFont(33);
 oledGotoYX(4,pozicija);
 oledPutCharDigitalFont(41);
 oledGotoYX(5,pozicija);
 oledPutCharDigitalFont(33);

 oledGotoYX(2,1+pozicija);
 oledPutCharDigitalFont(38);
 oledGotoYX(2,2+pozicija);
 oledPutCharDigitalFont(39);
 oledGotoYX(3,2+pozicija);
 oledPutCharDigitalFont(40);
 oledGotoYX(4,2+pozicija);
 oledPutCharDigitalFont(41);
 oledGotoYX(5,2+pozicija);
 oledPutCharDigitalFont(42);
 oledGotoYX(6,2+pozicija);
 oledPutCharDigitalFont(43);
 oledGotoYX(6,1+pozicija);
 oledPutCharDigitalFont(44);
 oledGotoYX(6,pozicija);
 oledPutCharDigitalFont(45);

 oledGotoYX(4,1+pozicija);
 oledPutCharDigitalFont(46);

}

void Digitalno_Devet(uint8_t pozicija){
 oledGotoYX(2,pozicija);
 oledPutCharDigitalFont(43);
 oledGotoYX(3,pozicija);
 oledPutCharDigitalFont(33);
 oledGotoYX(4,pozicija);
 oledPutCharDigitalFont(41);


 oledGotoYX(2,1+pozicija);
 oledPutCharDigitalFont(38);
 oledGotoYX(2,2+pozicija);
 oledPutCharDigitalFont(39);
 oledGotoYX(3,2+pozicija);
 oledPutCharDigitalFont(40);
 oledGotoYX(4,2+pozicija);
 oledPutCharDigitalFont(41);
 oledGotoYX(5,2+pozicija);
 oledPutCharDigitalFont(42);
 oledGotoYX(6,2+pozicija);
 oledPutCharDigitalFont(43);
 oledGotoYX(6,1+pozicija);
 oledPutCharDigitalFont(44);
 oledGotoYX(6,pozicija);
 oledPutCharDigitalFont(45);

 oledGotoYX(4,1+pozicija);
 oledPutCharDigitalFont(46);
}
